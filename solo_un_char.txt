'''
python3-full		 bleachbit                transmission             p7zip-full               ffmpeg                    adb                      htop                     neofetch                 mpv                      gdebi                    mangohud                 thunderbird              git                      telegram-desktop         gnome-sound-recorder     cpu-x                    gnome-disk-utility       redshift-gtk             gparted                  texlive                 
'''
print( only_one_char( char=' ', text='python3-full		 bleachbit                transmission             p7zip-full               ffmpeg                    adb                      htop                     neofetch                 mpv                      gdebi                    mangohud                 thunderbird              git                      telegram-desktop         gnome-sound-recorder     cpu-x                    gnome-disk-utility       redshift-gtk             gparted                  texlive      ') )


Yo:
def only_one_char( char=str, text=str ) -> str:
    '''
    En el texto establece un caracter repetido mas de una vez en solo uno,
    char=str (Caracter a establecer solo uno)
    text=str (Texto al que se le aplicara la función)
    '''
    # Texto en modo lista
    list_text = []
    for x in text:
        list_text.append(x)

    # Posicion de char que no se removera
    number = 0
    pos_not_remove = []
    pos = 0
    for c in list_text:
        if c == char:
            number += 1
        else:
            pos_not_remove.append(pos)
        pos += 1
    
    # Detectar si hay mas de uno
    new_text = text
    if number > 1:
        # Hay mas de uno
        # establecer los char que tendran un solo espacio
        new_text = ''
        limit = len(pos_not_remove)-1
        pos = 0
        char_with_space = []
        for n in pos_not_remove:
            if pos < limit:
                if (pos_not_remove[pos+1] -pos_not_remove[pos]) > 1:
                    char_with_space.append( list_text[ pos_not_remove[pos] ] )
            pos += 1

        # Quitar y agregar solo un char (basado en char_with_space)
        new_text = ''
        for c in text:
            if not c == char:
                space = False
                for x in char_with_space:
                    if x == c:
                        space = True
                if space == True:
                    new_text += f'{c}{char}'
                else:
                    new_text += c
        
        # Agregar o no un espacio al final
        if list_text[0] == char:
            new_text = f'{char}{new_text}'
    
    return new_text


# Probando
print(
only_one_char(' ', '    c    p    hd 4k')
)
# Resultado deseado: ' c p hd 4k'




chatgpt:
def only_one_char(char: str, text: str) -> str:
    '''
    En el texto, establece que el carácter repetido aparezca solo una vez.
    
    char: str (Carácter que se va a limitar a una única aparición)
    text: str (Texto al cual se le aplicará la función)
    '''
    # Verifica si el carácter está en el texto más de una vez
    if text.count(char) > 1:
        # Mantén solo la primera aparición y elimina las demás
        first_char_index = text.find(char)
        # Armamos el nuevo texto sin las repeticiones del carácter
        text = text[:first_char_index + 1] + text[first_char_index + 1:].replace(char, '')
        
    return text
    
    

chatgpt (lo que jalo):
def only_one_char(char: str, text: str) -> str:
    """
    Reemplaza cualquier secuencia de caracteres en blanco (espacios, tabulaciones, etc.) por un solo carácter especificado.
    
    char: str (Carácter que se va a limitar a una única aparición consecutiva)
    text: str (Texto al que se le aplicará la función)
    
    Retorna:
    str: Texto con una sola aparición consecutiva del carácter.
    """
    # Divide el texto en palabras, eliminando cualquier secuencia de espacios en blanco, luego únelas con un solo espacio
    return char.join(text.split())


Explicación yo:
Entonces pasa esto:
char = '_'
text = 'hola, hd n n n Palabra'
text.split() hace:
[ 'hola,', 'hd', 'n, 'n', 'n', 'Palabra']

char.join( text.split() ) hace:
'hola_hd_n_n_n_Palabra'